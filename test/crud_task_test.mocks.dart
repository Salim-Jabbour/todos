// Mocks generated by Mockito 5.4.4 from annotations
// in maids_task_manager_app_test/test/crud_task_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i2;
import 'package:maids_task_manager_app_test/core/errors/base_error.dart' as _i6;
import 'package:maids_task_manager_app_test/core/network/network_info.dart'
    as _i9;
import 'package:maids_task_manager_app_test/features/auth/data/datasource/local/auth_local_data_source.dart'
    as _i11;
import 'package:maids_task_manager_app_test/features/auth/models/user_model.dart'
    as _i8;
import 'package:maids_task_manager_app_test/features/my_tasks/data/datasource/local/my_todo_local_data_source.dart'
    as _i10;
import 'package:maids_task_manager_app_test/features/my_tasks/data/datasource/remote/my_todo_remote_data_source.dart'
    as _i4;
import 'package:maids_task_manager_app_test/features/my_tasks/models/my_todo_model.dart'
    as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite/sqflite.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabase_1 extends _i1.SmartFake implements _i3.Database {
  _FakeDatabase_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MyTodoRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMyTodoRemoteDataSource extends _i1.Mock
    implements _i4.MyTodoRemoteDataSource {
  MockMyTodoRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, _i7.MyTodos>> getAllMyTodos(
          {required String? userId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllMyTodos,
          [],
          {#userId: userId},
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, _i7.MyTodos>>.value(
            _FakeEither_0<_i6.Failure, _i7.MyTodos>(
          this,
          Invocation.method(
            #getAllMyTodos,
            [],
            {#userId: userId},
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, _i7.MyTodos>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, _i7.MyTodoModel>> addTodo({
    required String? todo,
    required int? completed,
    required int? userId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTodo,
          [],
          {
            #todo: todo,
            #completed: completed,
            #userId: userId,
          },
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, _i7.MyTodoModel>>.value(
            _FakeEither_0<_i6.Failure, _i7.MyTodoModel>(
          this,
          Invocation.method(
            #addTodo,
            [],
            {
              #todo: todo,
              #completed: completed,
              #userId: userId,
            },
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, _i7.MyTodoModel>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, _i7.MyTodoModel>> updateTodo({
    required String? todoId,
    required bool? completed,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTodo,
          [],
          {
            #todoId: todoId,
            #completed: completed,
          },
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, _i7.MyTodoModel>>.value(
            _FakeEither_0<_i6.Failure, _i7.MyTodoModel>(
          this,
          Invocation.method(
            #updateTodo,
            [],
            {
              #todoId: todoId,
              #completed: completed,
            },
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, _i7.MyTodoModel>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, String>> deleteTodo(
          {required String? todoId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTodo,
          [],
          {#todoId: todoId},
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, String>>.value(
            _FakeEither_0<_i6.Failure, String>(
          this,
          Invocation.method(
            #deleteTodo,
            [],
            {#todoId: todoId},
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, String>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, _i8.UserModel>> refreshToken(
          String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshToken,
          [token],
        ),
        returnValue: _i5.Future<_i2.Either<_i6.Failure, _i8.UserModel>>.value(
            _FakeEither_0<_i6.Failure, _i8.UserModel>(
          this,
          Invocation.method(
            #refreshToken,
            [token],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, _i8.UserModel>>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i9.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}

/// A class which mocks [MyTodoLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMyTodoLocalDataSource extends _i1.Mock
    implements _i10.MyTodoLocalDataSource {
  MockMyTodoLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.Database> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i5.Future<_i3.Database>.value(_FakeDatabase_1(
          this,
          Invocation.getter(#database),
        )),
      ) as _i5.Future<_i3.Database>);

  @override
  _i5.Future<_i3.Database> initDb(String? fileName) => (super.noSuchMethod(
        Invocation.method(
          #initDb,
          [fileName],
        ),
        returnValue: _i5.Future<_i3.Database>.value(_FakeDatabase_1(
          this,
          Invocation.method(
            #initDb,
            [fileName],
          ),
        )),
      ) as _i5.Future<_i3.Database>);

  @override
  _i5.Future<void> createTodo(_i7.MyTodoModelOffline? todo) =>
      (super.noSuchMethod(
        Invocation.method(
          #createTodo,
          [todo],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<List<_i7.MyTodoModelOffline>?> getAllTodos() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllTodos,
          [],
        ),
        returnValue: _i5.Future<List<_i7.MyTodoModelOffline>?>.value(),
      ) as _i5.Future<List<_i7.MyTodoModelOffline>?>);

  @override
  _i5.Future<void> closeDb() => (super.noSuchMethod(
        Invocation.method(
          #closeDb,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> clearDatabase() => (super.noSuchMethod(
        Invocation.method(
          #clearDatabase,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> insertTodos(List<_i7.MyTodoModelOffline>? todos) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertTodos,
          [todos],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [AuthLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthLocalDataSource extends _i1.Mock
    implements _i11.AuthLocalDataSource {
  MockAuthLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> setUserToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #setUserToken,
          [token],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String?> getUserToken() => (super.noSuchMethod(
        Invocation.method(
          #getUserToken,
          [],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<void> setUserId(String? id) => (super.noSuchMethod(
        Invocation.method(
          #setUserId,
          [id],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String?> getUserId() => (super.noSuchMethod(
        Invocation.method(
          #getUserId,
          [],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<void> setUserImage(String? image) => (super.noSuchMethod(
        Invocation.method(
          #setUserImage,
          [image],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String?> getUserImage() => (super.noSuchMethod(
        Invocation.method(
          #getUserImage,
          [],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<void> setUserName(String? name) => (super.noSuchMethod(
        Invocation.method(
          #setUserName,
          [name],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String?> getUserName() => (super.noSuchMethod(
        Invocation.method(
          #getUserName,
          [],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<void> clearAllUserData() => (super.noSuchMethod(
        Invocation.method(
          #clearAllUserData,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

// Mocks generated by Mockito 5.4.4 from annotations
// in maids_task_manager_app_test/test/bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:maids_task_manager_app_test/core/errors/base_error.dart' as _i5;
import 'package:maids_task_manager_app_test/features/auth/models/user_model.dart'
    as _i7;
import 'package:maids_task_manager_app_test/features/my_tasks/models/my_todo_model.dart'
    as _i6;
import 'package:maids_task_manager_app_test/features/my_tasks/repository/my_todo_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MyTodoRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMyTodoRepository extends _i1.Mock implements _i3.MyTodoRepository {
  MockMyTodoRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.MyTodos>> getAllMyTodos(
          {required String? userId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllMyTodos,
          [],
          {#userId: userId},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.MyTodos>>.value(
            _FakeEither_0<_i5.Failure, _i6.MyTodos>(
          this,
          Invocation.method(
            #getAllMyTodos,
            [],
            {#userId: userId},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.MyTodos>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.MyTodoModel>> addTodo({
    required String? todo,
    required int? completed,
    required int? userId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTodo,
          [],
          {
            #todo: todo,
            #completed: completed,
            #userId: userId,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.MyTodoModel>>.value(
            _FakeEither_0<_i5.Failure, _i6.MyTodoModel>(
          this,
          Invocation.method(
            #addTodo,
            [],
            {
              #todo: todo,
              #completed: completed,
              #userId: userId,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.MyTodoModel>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.MyTodoModel>> updateTodo({
    required String? todoId,
    required bool? completed,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTodo,
          [],
          {
            #todoId: todoId,
            #completed: completed,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.MyTodoModel>>.value(
            _FakeEither_0<_i5.Failure, _i6.MyTodoModel>(
          this,
          Invocation.method(
            #updateTodo,
            [],
            {
              #todoId: todoId,
              #completed: completed,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.MyTodoModel>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, String>> deleteTodo(
          {required String? todoId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTodo,
          [],
          {#todoId: todoId},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, String>>.value(
            _FakeEither_0<_i5.Failure, String>(
          this,
          Invocation.method(
            #deleteTodo,
            [],
            {#todoId: todoId},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, String>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.UserModel>> refreshToken(
          String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshToken,
          [token],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i7.UserModel>>.value(
            _FakeEither_0<_i5.Failure, _i7.UserModel>(
          this,
          Invocation.method(
            #refreshToken,
            [token],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i7.UserModel>>);
}
